---
apiVersion: v1
kind: Namespace
metadata:
  name: rishat-space-production
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rishat-space-production-service-account
  namespace: rishat-space-production
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rishat-space-production-role
  namespace: rishat-space-production
rules:
  - apiGroups:
        - ""
        - apps
        - autoscaling
        - batch
        - extensions
        - policy
        - rbac.authorization.k8s.io
    resources:
      - pods
      - componentstatuses
      - configmaps
      - daemonsets
      - deployments
      - events
      - endpoints
      - horizontalpodautoscalers
      - ingress
      - jobs
      - limitranges
      - namespaces
      - nodes
      - pods
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rishat-space-production-role-binding
subjects:
- namespace: rishat-space-production
  kind: ServiceAccount
  name: rishat-space-production-service-account 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rishat-space-production-role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: rishat-space
  name: rishat-space
  namespace: rishat-space-production
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rishat-space
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: rishat-space
    spec:
      containers:
        - image: skeletondocker/rishat.space:sha-abef103c0ee22ed6b0d4a68e4ee32d62f8fa787d
          name: rishat-space
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: rishat-space-production-service
  namespace: rishat-space-production
  labels:
    io.kompose.service: rishat-space
spec:
  selector:
    io.kompose.service: rishat-space
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80